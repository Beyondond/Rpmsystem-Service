<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "cn.com.dhc.rpmsystem.system.dao.AuthorityDao">
    <resultMap id="BaseResultMap" type="cn.com.dhc.rpmsystem.system.dto.MemberRole">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="skills" jdbcType="VARCHAR" property="skills"/>
        <result column="created_num_uid" jdbcType="VARCHAR" property="createNumUid"/>
        <result column="colum_name" jdbcType="VARCHAR" property="columName"/>
        <result column="created_time" jdbcType="VARCHAR" property="created_time"/>
        <result column="num_uid" jdbcType="INTEGER" property="numUid"/>
        <result column="mem_name" jdbcType="VARCHAR" property="memName"/>
        <result column="role_ids" jdbcType="VARCHAR" property="roleIds"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="column_show" jdbcType="VARCHAR" property="columnShow"/>
        <result column="created_num_uid" jdbcType="VARCHAR" property="createdNumUid"/>
        <result column="created_time" jdbcType="VARCHAR" property="createdTime"/>
    </resultMap>

   <insert id="addAuthority"  parameterType = "cn.com.dhc.rpmsystem.system.entity.RpmMemberRole">
       INSERT INTO `rpm_system`.`rpm_member_role`(`num_uid`, `mem_name`, `role_ids`, `password`, `column_show`, `created_num_uid`, `created_time`)
       VALUES (#{numUid}, #{memName}, #{roleIds}, #{password}, #{columnShow}, #{createdNumUid}, #{createdTime});
   </insert>
    <!--删除一个权限-->
    <delete id="deleteAuthority" parameterType="integer">
        DELETE FROM `rpm_system`.`rpm_member_role`
        WHERE `num_uid` = #{numUid}
</delete>
    <!--编辑更新权限-->
    <update id="updateAuthority"   parameterType="cn.com.dhc.rpmsystem.system.entity.RpmMemberRole">
        UPDATE `rpm_system`.`rpm_member_role`
        SET `mem_name` = #{memName}, `role_ids` = #{roleIds}, `password` = #{password},
        `column_show` = #{columnShow}, `created_num_uid` = #{createdNumUid}, `created_time` = #{createdTime}
        WHERE `mem_name` = #{memName};
    </update>
    <!-- 查询所有人员权限-->
    <select id="findAllAuthoritys" resultMap="BaseResultMap"  resultType="cn.com.dhc.rpmsystem.system.dto.MemberRole">
        SELECT  id ,num_uid , mem_name, role_name
        FROM rpm_member_role AS m
        INNER JOIN rpm_role AS r
        ON m.role_ids = r.id
    </select>

    <!--根据名称查找权限-->
    <select id="findOneAuthority" resultMap="BaseResultMap" resultType="cn.com.dhc.rpmsystem.system.dto.MemberRole">
        SELECT  id ,num_uid ,mem_name,role_name
        FROM rpm_member_role AS m
        INNER JOIN rpm_role AS r
        ON m.role_ids = r.id
        WHERE
          m.mem_name = #{memName}
    </select>
</mapper>